%Title: Minimum wOBA Ratio Table
%Author: McCafferty
%this function takes the number of outs in a game, the bases that are
%occupies, and the relative score of the game to calculate the minimum
%wOBA ration for an intentional walk

function  minRatio  = minimumwOBA( inning, bases, outs, score )

wOBAtable = {'Top 1', 23, 1, 1.3, 1.32, 1.34, 1.37, 1.4, [], [], [], [], [], [] ;...
    'Top 1', 2, 2, 1.28, 1.29, 1.3, 1.32, 1.34, 1.36, 1.39, [], [], [], [] ;...
    'Top 1', 3, 2, 1.35, 1.36, 1.37, 1.39, [], [], [], [], [], [], [] ;...
    'Top 1', 23, 2, 1.26, 1.26, 1.27, 1.28, 1.29, 1.3, 1.32, 1.34, 1.36, 1.38, [] ;...
    'Bot 1', 23, 1, 1.28, 1.29, 1.32, 1.34, 1.37, [], [], [], [], [], [] ;...
    'Bot 1', 2, 2, 1.27, 1.28, 1.29, 1.31, 1.32, 1.34, 1.37, [], [], [], [] ;...
    'Bot 1', 3, 2, 1.33, 1.34, 1.36, 1.37, 1.39, [], [], [], [], [], [] ;...
    'Bot 1', 23, 2, 1.25, 1.26, 1.26, 1.27, 1.28, 1.29, 1.31, 1.33, 1.35, 1.37, 1.4 ;...
    'Top 2', 23, 1, 1.28, 1.3, 1.32, 1.35, 1.38, [], [], [], [], [], [] ;...
    'Top 2', 2, 2, 1.27, 1.28, 1.29, 1.31, 1.33, 1.35, 1.38, [], [], [], [] ;...
    'Top 2', 3, 2, 1.34, 1.35, 1.36, 1.38, 1.4, [], [], [], [], [], [] ;...
    'Top 2', 23, 2, 1.26, 1.26, 1.27, 1.27, 1.28, 1.29, 1.31, 1.33, 1.36, 1.39, [] ;...
     'Bot 2', 23, 1, 1.26, 1.27, 1.29, 1.32, 1.35, 1.39, [], [], [], [], [] ;...
     'Bot 2', 2, 2, 1.26, 1.27, 1.28, 1.29, 1.31, 1.33, 1.36, [], [], [], [] ;...
     'Bot 2', 3, 2, 1.33, 1.34, 1.35, 1.36, 1.38, [], [], [], [], [], [] ;...
     'Bot 2', 13, 2, 1.39, [], [], [], [], [], [], [], [], [], [] ;...
     'Bot 2', 23, 2, 1.25, 1.25, 1.26, 1.27, 1.27, 1.28, 1.3, 1.32, 1.35, 1.38, [] ;...
     'Top 3', 23, 1, 1.26, 1.28, 1.3, 1.33, 1.36, [], [], [], [], [], [] ;...
     'Top 3', 2, 2, 1.26, 1.27, 1.29, 1.3, 1.32, 1.35, 1.39, [], [], [], [] ;...
     'Top 3', 3, 2, 1.33, 1.34, 1.35, 1.37, 1.39, [], [], [], [], [], [] ;...
     'Top 3', 13, 2, 1.4, [], [], [], [], [], [], [], [], [], [] ;...
     'Top 3', 23, 2, 1.25, 1.26, 1.26, 1.27, 1.28, 1.29, 1.31, 1.34, 1.37, [], [] ;...
     'Bot 3', 23, 1, 1.24, 1.25, 1.27, 1.3, 1.33, 1.37, [], [], [], [], [] ;...
     'Bot 3', 2, 2, 1.25, 1.26, 1.27, 1.28, 1.3, 1.33, 1.36, [], [], [], [] ;...
     'Bot 3', 3, 2, 1.31, 1.32, 1.34, 1.35, 1.37, 1.39, [], [], [], [], [] ;...
     'Bot 3', 13, 2, 1.38, 1.39, [], [], [], [], [], [], [], [], [] ;...
     'Bot 3', 23, 2, 1.24, 1.25, 1.25, 1.26, 1.27, 1.28, 1.3, 1.32, 1.36, 1.39, [] ;...
     'Top 4', 23, 1, 1.24, 1.25, 1.28, 1.3, 1.33, 1.38, [], [], [], [], [] ;...
     'Top 4', 2, 2, 1.25, 1.26, 1.27, 1.28, 1.3, 1.33, 1.37, [], [], [], [] ;...
     'Top 4', 3, 2, 1.31, 1.32, 1.33, 1.35, 1.37, 1.4, [], [], [], [], [] ;...
     'Top 4', 13, 2, 1.38, 1.39, [], [], [], [], [], [], [], [], [] ;...
     'Top 4', 23, 2, 1.24, 1.25, 1.25, 1.26, 1.27, 1.28, 1.3, 1.33, 1.37, [], [] ;...
     'Bot 4', 23, 1, 1.21, 1.22, 1.24, 1.27, 1.3, 1.33, 1.39, [], [], [], [] ;...
     'Bot 4', 2, 2, 1.23, 1.24, 1.25, 1.27, 1.28, 1.3, 1.35, 1.37, [], [], [] ;...
     'Bot 4', 3, 2, 1.3, 1.31, 1.32, 1.33, 1.35, 1.37, [], [], [], [], [] ;...
     'Bot 4', 13, 2, 1.37, 1.38, 1.39, 1.4, [], [], [], [], [], [], [] ;...
     'Bot 4', 23, 2, 1.24, 1.24, 1.25, 1.25, 1.26, 1.27, 1.28, 1.31, 1.36, [], [] ;...
     'Top 5', 23, 1, 1.22, 1.23, 1.25, 1.28, 1.31, 1.35, [], [], [], [], [] ;...
     'Top 5', 2, 2, 1.24, 1.25, 1.26, 1.28, 1.3, 1.32, 1.38, [], [], [], [] ;...
     'Top 5', 3, 2, 1.31, 1.32, 1.33, 1.34, 1.36, 1.39, [], [], [], [], [] ;...
     'Top 5', 13, 2, 1.38, 1.39, 1.4, [], [], [], [], [], [], [], [] ;...
     'Top 5', 23, 2, 1.24, 1.25, 1.25, 1.26, 1.26, 1.27, 1.29, 1.34, 1.4, [], [] ;...
     'Bot 5', 23, 1, 1.18, 1.2, 1.22, 1.24, 1.26, 1.3, 1.36, [], [], [], [] ;...
     'Bot 5', 2, 2, 1.23, 1.24, 1.25, 1.27, 1.29, 1.35, [], [], [], [], [] ;...
     'Bot 5', 3, 2, 1.29, 1.3, 1.31, 1.32, 1.34, 1.36, [], [], [], [], [] ;...
     'Bot 5', 13, 2, 1.36, 1.37, 1.38, 1.39, [], [], [], [], [], [], [] ;...
     'Bot 5', 23, 2, 1.24, 1.24, 1.24, 1.25, 1.25, 1.26, 1.27, 1.32, 1.38, [], [] ;...
     'Top 6', 23, 1, 1.18, 1.2, 1.22, 1.24, 1.27, 1.3, 1.38, [], [], [], [] ;...
     'Top 6', 2, 2, 1.22, 1.22, 1.23, 1.24, 1.26, 1.28, 1.35, [], [], [], [] ;...
     'Top 6', 3, 2, 1.28, 1.29, 1.3, 1.31, 1.33, 1.35, [], [], [], [], [] ;...
     'Top 6', 13, 2, 1.35, 1.36, 1.37, 1.38, 1.39, [], [], [], [], [], [] ;...
     'Top 6', 23, 2, 1.23, 1.23, 1.24, 1.24, 1.25, 1.25, 1.27, 1.33, [], [], [] ;...
     'Bot 6', 23, 1, 1.15, 1.16, 1.18, 1.19, 1.22, 1.24, 1.31, [], [], [], [] ;...
     'Bot 6', 2, 2, 1.2, 1.2, 1.21, 1.22, 1.23, 1.24, 1.31, [], [], [], [] ;...
     'Bot 6', 3, 2, 1.26, 1.27, 1.28, 1.29, 1.3, 1.31, 1.38, [], [], [], [] ;...
     'Bot 6', 13, 2, 1.33, 1.34, 1.35, 1.36, 1.37, 1.38, [], [], [], [], [] ;...
     'Bot 6', 23, 2, 1.22, 1.23, 1.23, 1.23, 1.23, 1.24, 1.25, 1.3, 1.4, [], [] ;...
     'Top 7', 23, 1, 1.16, 1.17, 1.18, 1.2, 1.23, 1.25, 1.33, [], [], [], [] ;...
     'Top 7', 2, 2, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.36, [], [], [], [] ;...
     'Top 7', 3, 2, 1.28, 1.29, 1.29, 1.31, 1.32, 1.33, [], [], [], [], [] ;...
     'Top 7', 13, 2, 1.35, 1.36, 1.36, 1.37, 1.39, 1.4, [], [], [], [], [] ;...
     'Top 7', 23, 2, 1.23, 1.23, 1.24, 1.24, 1.25, 1.25, 1.26, 1.33, [], [], [] ;...
     'Bot 7', 23, 0, 1.38, 1.39, [], [], [], [], [], [], [], [], [] ;...
     'Bot 7', 3, 1, 1.37, 1.38, 1.4, [], [], [], [], [], [], [], [] ;...
     'Bot 7', 23, 1, 1.12, 1.13, 1.14, 1.15, 1.17, 1.16, 1.24, [], [], [], [] ;...
     'Bot 7', 2, 2, 1.19, 1.2, 1.2, 1.21, 1.22, 1.21, 1.31, [], [], [], [] ;...
     'Bot 7', 3, 2, 1.26, 1.26, 1.27, 1.28, 1.29, 1.27, 1.38, [], [], [], [] ;...
     'Bot 7', 13, 2, 1.33, 1.33, 1.34, 1.35, 1.36, 1.34, [], [], [], [], [] ;...
     'Bot 7', 23, 2, 1.23, 1.23, 1.23, 1.23, 1.23, 1.24, 1.23, 1.3, [], [], [] ;...
     'Top 8', 23, 0, 1.39, 1.4, [], [], [], [], [], [], [], [], [] ;...
     'Top 8', 3, 1, 1.37, 1.38, 1.39, [], [], 1.4, [], [], [], [], [] ;...
     'Top 8', 23, 1, 1.12, 1.13, 1.14, 1.15, 1.17, 1.16, 1.25, [], [], [], [] ;...
     'Top 8', 2, 2, 1.18, 1.19, 1.19, 1.2, 1.21, 1.19, 1.31, [], [], [], [] ;...
     'Top 8', 3, 2, 1.24, 1.25, 1.26, 1.26, 1.27, 1.26, 1.37, [], [], [], [] ;...
     'Top 8', 13, 2, 1.32, 1.32, 1.33, 1.34, 1.34, 1.33, [], [], [], [], [] ;...
     'Top 8', 23, 2, 1.22, 1.22, 1.22, 1.22, 1.23, 1.23, 1.22, 1.32, [], [], [] ;...
     'Bot 8', 23, 0, 1.33, 1.34, 1.35, 1.36, 1.37, 1.33, 1.34, [], [], [], [] ;...
     'Bot 8', 2, 1, 1.39, 1.39, [], [], [], 1.33, [], [], [], [], [] ;...
     'Bot 8', 3, 1, 1.31, 1.32, 1.33, 1.34, 1.35, 1.23, [], [], [], [], [] ;...
     'Bot 8', 13, 1, [], [], [], [], [], 1.38, [], [], [], [], [] ;...
     'Bot 8', 23, 1, 1.07, 1.07, 1.08, 1.09, 1.1, 1.04, 1.13, [], [], [], [] ;...
     'Bot 8', 2, 2, 1.16, 1.16, 1.17, 1.17, 1.17, 1.13, 1.24, [], [], [], [] ;...
     'Bot 8', 3, 2, 1.22, 1.22, 1.23, 1.23, 1.24, 1.19, 1.31, [], [], [], [] ;...
     'Bot 8', 13, 2, 1.29, 1.3, 1.3, 1.31, 1.31, 1.26, 1.37, [], [], [], [] ;...
     'Top 9', 23, 2, 1.21, 1.21, 1.21, 1.21, 1.22, 1.22, 1.19, 1.27, [], [], [] ;...
     'Top 9', 23, 0, 1.33, 1.34, 1.35, 1.36, 1.37, 1.33, 1.33, [], [], [], [] ;...
     'Top 9', 2, 1, 1.38, 1.39, 1.4, [], [], 1.32, [], [], [], [], [] ;...
     'Top 9', 3, 1, 1.31, 1.32, 1.33, 1.34, 1.35, 1.22, [], [], [], [], [] ;...
     'Top 9', 13, 1, [], [], [], [], [], 1.37, [], [], [], [], [] ;...
     'Top 9', 23, 1, 1.07, 1.08, 1.08, 1.1, 1.1, 1.03, 1.14, [], [], [], [] ;...
     'Top 9', 2, 2, 1.15, 1.16, 1.16, 1.17, 1.17, 1.12, 1.27, [], [], [], [] ;...
     'Top 9', 3, 2, 1.22, 1.22, 1.23, 1.23, 1.23, 1.18, 1.34, [], [], [], [] ;...
     'Bot 9', 13, 2, 1.29, 1.29, 1.3, 1.3, 1.31, 1.25, [], [], [], [], [] ;...
     'Bot 9', 23, 2, 1.21, 1.21, 1.21, 1.21, 1.21, 1.22, 1.18, 1.31, [], [], [] ;...
     'Bot 9', 2, 0, [], [], [], [], [], 1.13, [], [], [], [], [] ;...
     'Bot 9', 3, 0, [], [], [], [], [], 1.29, [], [], [], [], [] ;...
     'Bot 9', 13, 0, [], [], [], [], [], .99, [], [], [], [], [] ;...
     'Bot 9', 23, 0, [], [], [], [], [], 1.14, 1.14, [], [], [], [] ;...
     'Bot 9', 2, 1, [], [], [], [], [], 1.14, [], [], [], [], [] ;...
     'Bot 9', 3, 1, [], [], [], [], [], .96, [], [], [], [], [] ;...
     'Bot 9', 13, 1, [], [], [], [], [], 1.12, [], [], [], [], [] ;...
     'Bot 9', 23, 1, [], [], [], [], [], 0.83, 1, [], [], [], [] ;...
     'Bot 9', 2, 2, [], [], [], [], [], 1.04, 1.2, [], [], [], [] ;...
     'Bot 9', 3, 2, [], [], [], [], [], 1.1, 1.27, [], [], [], [] ;...
     'Bot 9', 13, 2, [], [], [], [], [], 1.16, 1.34, [], [], [], [] ;...
     'Bot 9', 23, 2, [], [], [], [], [], 1.23, 1.15, 1.23, [], [], []};

col = score + 9;
row = getRow(inning, outs, bases, wOBAtable);

minRatio = wOBAtable{row, col};

end


%this function determines what row we are looking for given the number of
%outs and bases occupied

function row = getRow(inning, outs, base, table)

for i = 1:106
    if (strcmp(table{i, 1}, inning) == 1 && table{i, 2} == base && table{i, 3} == outs)
        row = i;
        return
    end
end
end

